//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace XAtlasSharp {

class XAtlasPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="SWIGRegisterExceptionCallbacks_XAtlas")]
    public static extern void SWIGRegisterExceptionCallbacks_XAtlas(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_XAtlas")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_XAtlas(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_XAtlas(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_XAtlas(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="SWIGRegisterStringCallback_XAtlas")]
    public static extern void SWIGRegisterStringCallback_XAtlas(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_XAtlas(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static XAtlasPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_GetChartSize")]
  public static extern int GetChartSize();

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_GetVertexSize")]
  public static extern int GetVertexSize();

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_GetMeshSize")]
  public static extern int GetMeshSize();

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Chart_Faces_set")]
  public static extern void Chart_Faces_set(global::System.Runtime.InteropServices.HandleRef jarg1, ref int jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Chart_Faces_get")]
  public static extern System.IntPtr Chart_Faces_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Chart_AtlasIndex_set")]
  public static extern void Chart_AtlasIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Chart_AtlasIndex_get")]
  public static extern uint Chart_AtlasIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Chart_FaceCount_set")]
  public static extern void Chart_FaceCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Chart_FaceCount_get")]
  public static extern uint Chart_FaceCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Chart_Type_set")]
  public static extern void Chart_Type_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Chart_Type_get")]
  public static extern int Chart_Type_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Chart_Material_set")]
  public static extern void Chart_Material_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Chart_Material_get")]
  public static extern uint Chart_Material_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_delete_Chart")]
  public static extern void delete_Chart(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Vertex_AtlasIndex_set")]
  public static extern void Vertex_AtlasIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Vertex_AtlasIndex_get")]
  public static extern int Vertex_AtlasIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Vertex_ChartIndex_set")]
  public static extern void Vertex_ChartIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Vertex_ChartIndex_get")]
  public static extern int Vertex_ChartIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Vertex_Uv_set")]
  public static extern void Vertex_Uv_set(global::System.Runtime.InteropServices.HandleRef jarg1, ref float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Vertex_Uv_get")]
  public static extern System.IntPtr Vertex_Uv_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Vertex_Xref_set")]
  public static extern void Vertex_Xref_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Vertex_Xref_get")]
  public static extern uint Vertex_Xref_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_delete_Vertex")]
  public static extern void delete_Vertex(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Mesh_Charts_get")]
  public static extern global::System.IntPtr Mesh_Charts_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Mesh_Indices_set")]
  public static extern void Mesh_Indices_set(global::System.Runtime.InteropServices.HandleRef jarg1, ref int jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Mesh_Indices_get")]
  public static extern System.IntPtr Mesh_Indices_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Mesh_Vertices_get")]
  public static extern global::System.IntPtr Mesh_Vertices_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Mesh_ChartCount_set")]
  public static extern void Mesh_ChartCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Mesh_ChartCount_get")]
  public static extern uint Mesh_ChartCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Mesh_IndexCount_set")]
  public static extern void Mesh_IndexCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Mesh_IndexCount_get")]
  public static extern uint Mesh_IndexCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Mesh_VertexCount_set")]
  public static extern void Mesh_VertexCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Mesh_VertexCount_get")]
  public static extern uint Mesh_VertexCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_delete_Mesh")]
  public static extern void delete_Mesh(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_KImageChartIndexMask_get")]
  public static extern uint KImageChartIndexMask_get();

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_KImageHasChartIndexBit_get")]
  public static extern uint KImageHasChartIndexBit_get();

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_KImageIsBilinearBit_get")]
  public static extern uint KImageIsBilinearBit_get();

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_KImageIsPaddingBit_get")]
  public static extern uint KImageIsPaddingBit_get();

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_Image_set")]
  public static extern void Atlas_Image_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_Image_get")]
  public static extern global::System.IntPtr Atlas_Image_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_Meshes_get")]
  public static extern global::System.IntPtr Atlas_Meshes_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_Utilization_set")]
  public static extern void Atlas_Utilization_set(global::System.Runtime.InteropServices.HandleRef jarg1, ref float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_Utilization_get")]
  public static extern System.IntPtr Atlas_Utilization_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_Width_set")]
  public static extern void Atlas_Width_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_Width_get")]
  public static extern uint Atlas_Width_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_Height_set")]
  public static extern void Atlas_Height_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_Height_get")]
  public static extern uint Atlas_Height_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_AtlasCount_set")]
  public static extern void Atlas_AtlasCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_AtlasCount_get")]
  public static extern uint Atlas_AtlasCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_ChartCount_set")]
  public static extern void Atlas_ChartCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_ChartCount_get")]
  public static extern uint Atlas_ChartCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_MeshCount_set")]
  public static extern void Atlas_MeshCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_MeshCount_get")]
  public static extern uint Atlas_MeshCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_TexelsPerUnit_set")]
  public static extern void Atlas_TexelsPerUnit_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Atlas_TexelsPerUnit_get")]
  public static extern float Atlas_TexelsPerUnit_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_delete_Atlas")]
  public static extern void delete_Atlas(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Create")]
  public static extern global::System.IntPtr Create();

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Destroy")]
  public static extern void Destroy(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexPositionData_set")]
  public static extern void MeshDecl_VertexPositionData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexPositionData_get")]
  public static extern global::System.IntPtr MeshDecl_VertexPositionData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexNormalData_set")]
  public static extern void MeshDecl_VertexNormalData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexNormalData_get")]
  public static extern global::System.IntPtr MeshDecl_VertexNormalData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexUvData_set")]
  public static extern void MeshDecl_VertexUvData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexUvData_get")]
  public static extern global::System.IntPtr MeshDecl_VertexUvData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_IndexData_set")]
  public static extern void MeshDecl_IndexData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_IndexData_get")]
  public static extern global::System.IntPtr MeshDecl_IndexData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_FaceIgnoreData_set")]
  public static extern void MeshDecl_FaceIgnoreData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_FaceIgnoreData_get")]
  public static extern global::System.IntPtr MeshDecl_FaceIgnoreData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_FaceMaterialData_set")]
  public static extern void MeshDecl_FaceMaterialData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_FaceMaterialData_get")]
  public static extern global::System.IntPtr MeshDecl_FaceMaterialData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_FaceVertexCount_set")]
  public static extern void MeshDecl_FaceVertexCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_FaceVertexCount_get")]
  public static extern global::System.IntPtr MeshDecl_FaceVertexCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexCount_set")]
  public static extern void MeshDecl_VertexCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexCount_get")]
  public static extern uint MeshDecl_VertexCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexPositionStride_set")]
  public static extern void MeshDecl_VertexPositionStride_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexPositionStride_get")]
  public static extern uint MeshDecl_VertexPositionStride_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexNormalStride_set")]
  public static extern void MeshDecl_VertexNormalStride_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexNormalStride_get")]
  public static extern uint MeshDecl_VertexNormalStride_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexUvStride_set")]
  public static extern void MeshDecl_VertexUvStride_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_VertexUvStride_get")]
  public static extern uint MeshDecl_VertexUvStride_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_IndexCount_set")]
  public static extern void MeshDecl_IndexCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_IndexCount_get")]
  public static extern uint MeshDecl_IndexCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_IndexOffset_set")]
  public static extern void MeshDecl_IndexOffset_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_IndexOffset_get")]
  public static extern int MeshDecl_IndexOffset_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_FaceCount_set")]
  public static extern void MeshDecl_FaceCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_FaceCount_get")]
  public static extern uint MeshDecl_FaceCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_IndexFormat_set")]
  public static extern void MeshDecl_IndexFormat_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_IndexFormat_get")]
  public static extern int MeshDecl_IndexFormat_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_Epsilon_set")]
  public static extern void MeshDecl_Epsilon_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_MeshDecl_Epsilon_get")]
  public static extern float MeshDecl_Epsilon_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_new_MeshDecl")]
  public static extern global::System.IntPtr new_MeshDecl();

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_delete_MeshDecl")]
  public static extern void delete_MeshDecl(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_AddMesh__SWIG_0")]
  public static extern int AddMesh__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_AddMesh__SWIG_1")]
  public static extern int AddMesh__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_AddMeshJoin")]
  public static extern void AddMeshJoin(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_VertexUvData_set")]
  public static extern void UvMeshDecl_VertexUvData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_VertexUvData_get")]
  public static extern global::System.IntPtr UvMeshDecl_VertexUvData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_IndexData_set")]
  public static extern void UvMeshDecl_IndexData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_IndexData_get")]
  public static extern global::System.IntPtr UvMeshDecl_IndexData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_FaceMaterialData_set")]
  public static extern void UvMeshDecl_FaceMaterialData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_FaceMaterialData_get")]
  public static extern global::System.IntPtr UvMeshDecl_FaceMaterialData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_VertexCount_set")]
  public static extern void UvMeshDecl_VertexCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_VertexCount_get")]
  public static extern uint UvMeshDecl_VertexCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_VertexStride_set")]
  public static extern void UvMeshDecl_VertexStride_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_VertexStride_get")]
  public static extern uint UvMeshDecl_VertexStride_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_IndexCount_set")]
  public static extern void UvMeshDecl_IndexCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_IndexCount_get")]
  public static extern uint UvMeshDecl_IndexCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_IndexOffset_set")]
  public static extern void UvMeshDecl_IndexOffset_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_IndexOffset_get")]
  public static extern int UvMeshDecl_IndexOffset_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_IndexFormat_set")]
  public static extern void UvMeshDecl_IndexFormat_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_UvMeshDecl_IndexFormat_get")]
  public static extern int UvMeshDecl_IndexFormat_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_new_UvMeshDecl")]
  public static extern global::System.IntPtr new_UvMeshDecl();

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_delete_UvMeshDecl")]
  public static extern void delete_UvMeshDecl(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_AddUvMesh")]
  public static extern int AddUvMesh(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_ParamFunc_set")]
  public static extern void ChartOptions_ParamFunc_set(global::System.Runtime.InteropServices.HandleRef jarg1, ChartOptions.ParameterizeFuncDelegate jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_ParamFunc_get")]
  public static extern ChartOptions.ParameterizeFuncDelegate ChartOptions_ParamFunc_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_MaxChartArea_set")]
  public static extern void ChartOptions_MaxChartArea_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_MaxChartArea_get")]
  public static extern float ChartOptions_MaxChartArea_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_MaxBoundaryLength_set")]
  public static extern void ChartOptions_MaxBoundaryLength_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_MaxBoundaryLength_get")]
  public static extern float ChartOptions_MaxBoundaryLength_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_NormalDeviationWeight_set")]
  public static extern void ChartOptions_NormalDeviationWeight_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_NormalDeviationWeight_get")]
  public static extern float ChartOptions_NormalDeviationWeight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_RoundnessWeight_set")]
  public static extern void ChartOptions_RoundnessWeight_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_RoundnessWeight_get")]
  public static extern float ChartOptions_RoundnessWeight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_StraightnessWeight_set")]
  public static extern void ChartOptions_StraightnessWeight_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_StraightnessWeight_get")]
  public static extern float ChartOptions_StraightnessWeight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_NormalSeamWeight_set")]
  public static extern void ChartOptions_NormalSeamWeight_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_NormalSeamWeight_get")]
  public static extern float ChartOptions_NormalSeamWeight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_TextureSeamWeight_set")]
  public static extern void ChartOptions_TextureSeamWeight_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_TextureSeamWeight_get")]
  public static extern float ChartOptions_TextureSeamWeight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_MaxCost_set")]
  public static extern void ChartOptions_MaxCost_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_MaxCost_get")]
  public static extern float ChartOptions_MaxCost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_MaxIterations_set")]
  public static extern void ChartOptions_MaxIterations_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_MaxIterations_get")]
  public static extern uint ChartOptions_MaxIterations_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_UseInputMeshUvs_set")]
  public static extern void ChartOptions_UseInputMeshUvs_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_UseInputMeshUvs_get")]
  public static extern bool ChartOptions_UseInputMeshUvs_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_FixWinding_set")]
  public static extern void ChartOptions_FixWinding_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ChartOptions_FixWinding_get")]
  public static extern bool ChartOptions_FixWinding_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_new_ChartOptions")]
  public static extern global::System.IntPtr new_ChartOptions();

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_delete_ChartOptions")]
  public static extern void delete_ChartOptions(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ComputeCharts__SWIG_0")]
  public static extern void ComputeCharts__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_ComputeCharts__SWIG_1")]
  public static extern void ComputeCharts__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_MaxChartSize_set")]
  public static extern void PackOptions_MaxChartSize_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_MaxChartSize_get")]
  public static extern uint PackOptions_MaxChartSize_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_Padding_set")]
  public static extern void PackOptions_Padding_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_Padding_get")]
  public static extern uint PackOptions_Padding_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_TexelsPerUnit_set")]
  public static extern void PackOptions_TexelsPerUnit_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_TexelsPerUnit_get")]
  public static extern float PackOptions_TexelsPerUnit_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_Resolution_set")]
  public static extern void PackOptions_Resolution_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_Resolution_get")]
  public static extern uint PackOptions_Resolution_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_Bilinear_set")]
  public static extern void PackOptions_Bilinear_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_Bilinear_get")]
  public static extern bool PackOptions_Bilinear_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_BlockAlign_set")]
  public static extern void PackOptions_BlockAlign_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_BlockAlign_get")]
  public static extern bool PackOptions_BlockAlign_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_BruteForce_set")]
  public static extern void PackOptions_BruteForce_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_BruteForce_get")]
  public static extern bool PackOptions_BruteForce_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_CreateImage_set")]
  public static extern void PackOptions_CreateImage_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_CreateImage_get")]
  public static extern bool PackOptions_CreateImage_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_RotateChartsToAxis_set")]
  public static extern void PackOptions_RotateChartsToAxis_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_RotateChartsToAxis_get")]
  public static extern bool PackOptions_RotateChartsToAxis_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_RotateCharts_set")]
  public static extern void PackOptions_RotateCharts_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackOptions_RotateCharts_get")]
  public static extern bool PackOptions_RotateCharts_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_new_PackOptions")]
  public static extern global::System.IntPtr new_PackOptions();

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_delete_PackOptions")]
  public static extern void delete_PackOptions(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackCharts__SWIG_0")]
  public static extern void PackCharts__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_PackCharts__SWIG_1")]
  public static extern void PackCharts__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Generate__SWIG_0")]
  public static extern void Generate__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Generate__SWIG_1")]
  public static extern void Generate__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_Generate__SWIG_2")]
  public static extern void Generate__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_SetProgressCallback__SWIG_0")]
  public static extern void SetProgressCallback__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, XAtlas.ProgressFuncDelegate jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_SetProgressCallback__SWIG_1")]
  public static extern void SetProgressCallback__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, XAtlas.ProgressFuncDelegate jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_SetProgressCallback__SWIG_2")]
  public static extern void SetProgressCallback__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_SetAlloc__SWIG_0")]
  public static extern void SetAlloc__SWIG_0(XAtlas.ReallocFuncDelegate jarg1, XAtlas.FreeFuncDelegate jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_SetAlloc__SWIG_1")]
  public static extern void SetAlloc__SWIG_1(XAtlas.ReallocFuncDelegate jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_SetPrint")]
  public static extern void SetPrint(XAtlas.PrintFuncDelegate jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_StringForEnum__SWIG_0")]
  public static extern string StringForEnum__SWIG_0(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("XAtlas_wrap", EntryPoint="CSharp_XAtlasSharp_StringForEnum__SWIG_1")]
  public static extern string StringForEnum__SWIG_1(int jarg1);
}

}
