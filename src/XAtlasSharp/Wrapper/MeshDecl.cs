//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace XAtlasSharp {

public class MeshDecl : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MeshDecl(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MeshDecl obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MeshDecl() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          XAtlasPINVOKE.delete_MeshDecl(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public System.IntPtr VertexPositionData {
    set {
      XAtlasPINVOKE.MeshDecl_VertexPositionData_set(swigCPtr, new System.Runtime.InteropServices.HandleRef(null, value));
    } get{System.IntPtr res = XAtlasPINVOKE.MeshDecl_VertexPositionData_get(swigCPtr); ; return res;}
  }

  public System.IntPtr VertexNormalData {
    set {
      XAtlasPINVOKE.MeshDecl_VertexNormalData_set(swigCPtr, new System.Runtime.InteropServices.HandleRef(null, value));
    } get{System.IntPtr res = XAtlasPINVOKE.MeshDecl_VertexNormalData_get(swigCPtr); ; return res;}
  }

  public System.IntPtr VertexUvData {
    set {
      XAtlasPINVOKE.MeshDecl_VertexUvData_set(swigCPtr, new System.Runtime.InteropServices.HandleRef(null, value));
    } get{System.IntPtr res = XAtlasPINVOKE.MeshDecl_VertexUvData_get(swigCPtr); ; return res;}
  }

  public System.IntPtr IndexData {
    set {
      XAtlasPINVOKE.MeshDecl_IndexData_set(swigCPtr, new System.Runtime.InteropServices.HandleRef(null, value));
    } get{System.IntPtr res = XAtlasPINVOKE.MeshDecl_IndexData_get(swigCPtr); ; return res;}
  }

  public System.IntPtr FaceIgnoreData {
    set {
      XAtlasPINVOKE.MeshDecl_FaceIgnoreData_set(swigCPtr, new System.Runtime.InteropServices.HandleRef(null, value));
    } get{System.IntPtr res = XAtlasPINVOKE.MeshDecl_FaceIgnoreData_get(swigCPtr); ; return res;}
  }

  public System.IntPtr FaceMaterialData {
    set {
      XAtlasPINVOKE.MeshDecl_FaceMaterialData_set(swigCPtr, new System.Runtime.InteropServices.HandleRef(null, value));
    } get{System.IntPtr res = XAtlasPINVOKE.MeshDecl_FaceMaterialData_get(swigCPtr); ; return res;}
  }

  public System.IntPtr FaceVertexCount {
    set {
      XAtlasPINVOKE.MeshDecl_FaceVertexCount_set(swigCPtr, new System.Runtime.InteropServices.HandleRef(null, value));
    } get{System.IntPtr res = XAtlasPINVOKE.MeshDecl_FaceVertexCount_get(swigCPtr); ; return res;}
  }

  public uint VertexCount {
    set {
      XAtlasPINVOKE.MeshDecl_VertexCount_set(swigCPtr, value);
    } 
    get {
      uint ret = XAtlasPINVOKE.MeshDecl_VertexCount_get(swigCPtr);
      return ret;
    } 
  }

  public uint VertexPositionStride {
    set {
      XAtlasPINVOKE.MeshDecl_VertexPositionStride_set(swigCPtr, value);
    } 
    get {
      uint ret = XAtlasPINVOKE.MeshDecl_VertexPositionStride_get(swigCPtr);
      return ret;
    } 
  }

  public uint VertexNormalStride {
    set {
      XAtlasPINVOKE.MeshDecl_VertexNormalStride_set(swigCPtr, value);
    } 
    get {
      uint ret = XAtlasPINVOKE.MeshDecl_VertexNormalStride_get(swigCPtr);
      return ret;
    } 
  }

  public uint VertexUvStride {
    set {
      XAtlasPINVOKE.MeshDecl_VertexUvStride_set(swigCPtr, value);
    } 
    get {
      uint ret = XAtlasPINVOKE.MeshDecl_VertexUvStride_get(swigCPtr);
      return ret;
    } 
  }

  public uint IndexCount {
    set {
      XAtlasPINVOKE.MeshDecl_IndexCount_set(swigCPtr, value);
    } 
    get {
      uint ret = XAtlasPINVOKE.MeshDecl_IndexCount_get(swigCPtr);
      return ret;
    } 
  }

  public int IndexOffset {
    set {
      XAtlasPINVOKE.MeshDecl_IndexOffset_set(swigCPtr, value);
    } 
    get {
      int ret = XAtlasPINVOKE.MeshDecl_IndexOffset_get(swigCPtr);
      return ret;
    } 
  }

  public uint FaceCount {
    set {
      XAtlasPINVOKE.MeshDecl_FaceCount_set(swigCPtr, value);
    } 
    get {
      uint ret = XAtlasPINVOKE.MeshDecl_FaceCount_get(swigCPtr);
      return ret;
    } 
  }

  public IndexFormat IndexFormat {
    set {
      XAtlasPINVOKE.MeshDecl_IndexFormat_set(swigCPtr, (int)value);
    } 
    get {
      IndexFormat ret = (IndexFormat)XAtlasPINVOKE.MeshDecl_IndexFormat_get(swigCPtr);
      return ret;
    } 
  }

  public float Epsilon {
    set {
      XAtlasPINVOKE.MeshDecl_Epsilon_set(swigCPtr, value);
    } 
    get {
      float ret = XAtlasPINVOKE.MeshDecl_Epsilon_get(swigCPtr);
      return ret;
    } 
  }

  public MeshDecl() : this(XAtlasPINVOKE.new_MeshDecl(), true) {
  }

}

}
